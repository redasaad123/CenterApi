name: CI/CD for Terraform Project

on:
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:

      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}

      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      TF_VAR_subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:       ${{ secrets.TENANT_ID }}
      TF_VAR_client_id:       ${{ secrets.CLIENT_ID }}
      TF_VAR_client_secret:   ${{ secrets.CLIENT_SECRET }}
    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}



      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: remove .terraform directory
        run: |
          rm -rf ./Terraform/.terraform
          rm -rf ./Terraform/.terraform.lock.hcl

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: ./Terraform

      - name: Setup SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          chmod 644 ~/.ssh/id_rsa.pub

      # Validate Terraform configuration
      - name: Terraform Validate
        run: terraform validate
        working-directory: ./Terraform

      # Plan Terraform deployment
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./Terraform

      # Apply Terraform deployment
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master'
        run: terraform apply -auto-approve tfplan
        working-directory: ./Terraform

      # Export IP Address

      - name: Get Public IP
        id: get_ip
        run: |
          IP=$(terraform output -json public_ip | jq -r '.')
          echo "ip=$IP" >> $GITHUB_OUTPUT
        working-directory: ./Terraform

      - name: Show IP
        run: echo "Public IP is ${{ steps.get_ip.outputs.ip }}"


    





