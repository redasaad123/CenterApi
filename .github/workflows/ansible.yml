name: 2 - Ansible Configuration

on:
  repository_dispatch:
    types: [terraform-completed]
  workflow_dispatch:  # تشغيل يدوي
    inputs:
      public_ip:
        description: 'Server Public IP'
        required: true
        type: string
jobs:
  ansible:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Public IP
        id: get_ip
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            PUBLIC_IP="${{ github.event.client_payload.public_ip }}"
          else
            PUBLIC_IP="${{ inputs.public_ip }}"
          fi
          echo "public_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT
          echo "🌐 Target IP: $PUBLIC_IP"

      - name: Setup SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 644 ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ steps.get_ip.outputs.public_ip }} >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Wait for SSH
        run: |
          echo "⏳ Waiting for SSH to be ready..."
          for i in {1..30}; do
            if ssh -o ConnectTimeout=5 adminuser@${{ steps.get_ip.outputs.public_ip }} 'echo SSH Ready' 2>/dev/null; then
              echo "✅ SSH is ready!"
              exit 0
            fi
            echo "Attempt $i/30..."
            sleep 10
          done
          echo "❌ SSH connection timeout"
          exit 1

      - name: Ensure Python 3.12 is installed on remote
        run: |
          echo "📦 Ensuring Python 3.12 on remote server..."
          ssh -o StrictHostKeyChecking=no adminuser@${{ steps.get_ip.outputs.public_ip }} '
            set -e
            if ! command -v python3.12 >/dev/null 2>&1; then
              sudo apt-get update -y &&
              sudo apt-get install -y python3 python3-pip python3-venv
            fi
            sudo ln -sf /usr/bin/python3.12 /usr/bin/python3
            python3 --version
          '

      - name: Create Ansible Inventory
        run: |
          mkdir -p ./ansible
          cat > ./ansible/inventory.ini << EOF
          [webservers]
          server ansible_host=${{ steps.get_ip.outputs.public_ip }} ansible_user=adminuser ansible_ssh_private_key_file=~/.ssh/id_rsa ansible_python_interpreter=/usr/bin/python3
          EOF
          cat ./ansible/inventory.ini
          echo "📝 Inventory created"


      - name: Test Ansible Connection
        run: |
          ansible -i ./ansible/inventory.ini webservers -m ping

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ./ansible/inventory.ini ./ansible/playbook.yml

      - name: Configuration Complete
        run: |
          echo "🎉 ========================================="
          echo "✅ Server configured successfully!"
          echo "🌐 Server IP: ${{ steps.get_ip.outputs.public_ip }}"
          echo "🔗 Access: http://${{ steps.get_ip.outputs.public_ip }}"
          echo "=========================================="